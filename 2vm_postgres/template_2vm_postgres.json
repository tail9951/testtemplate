{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "SPOVmName": {
            "type": "string",
            "defaultValue": "SPOServer",
            "metadata": {
                "description": "The name of your SPO Virtual Machine."
            }
        },
        "VerificationVmName": {
            "type": "string",
            "defaultValue": "VerificationServer",
            "metadata": {
                "description": "The name of your SPO Virtual Machine."
            }
        },
        "ubuntuOSVersion": {
            "type": "string",
            "defaultValue": "18.04-LTS",
            "allowedValues": [
                "12.04.5-LTS",
                "14.04.5-LTS",
                "16.04.0-LTS",
                "18.04-LTS"
            ],
            "metadata": {
                "description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version."
            }
        },
        "VmSize": {
            "type": "string",
            "defaultValue": "Standard_B2s",
            "metadata": {
                "description": "The size of the VM"
            }
        },
        "subnetName": {
            "type": "string",
            "defaultValue": "Subnet",
            "metadata": {
                "description": "Name of the subnet in the virtual network"
            }
        },
        "adminUsername": {
            "type": "string"
        },
        "sshPublicKey" : {
            "type": "string"
        },
        "sqlAdminUsername": {
            "type": "string"
        },
        "sqlAdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Uppercase, lowercase and numbers are needed. Cannot have same word in username."
            }
        },
        "sqlLocation": {
            "type": "string",
            "defaultValue": "centralus"
        },
        "sqlServerName": {
            "type": "string"
        },
        "sqlSkuCapacity": {
            "type": "int",
            "defaultValue": 1
        },
        "sqlSkuFamily": {
            "type": "string",
            "defaultValue": "Gen5"
        },
        "sqlSkuName": {
            "type": "string",
            "defaultValue": "B_Gen5_1"
        },
        "sqlSkuSizeMB": {
            "type": "int",
            "defaultValue": 20480
        },
        "sqlSkuTier": {
            "type": "string",
            "defaultValue": "Basic"
        },
        "sqlVersion": {
            "type": "string",
            "defaultValue": "10"
        },
        "sqlBackupRetentionDays": {
            "type": "int",
            "defaultValue": 7
        },
        "sqlGeoRedundantBackup": {
            "type": "string",
            "defaultValue": "Disabled"
        },
        "sqlStorageAutoGrow": {
            "type": "string",
            "defaultValue": "Disabled"
        },
        "sqlInfrastructureEncryption": {
            "type": "string",
            "defaultValue": "Disabled"
        }
    },
    "variables": {
        "vm1publicIpAddressName": "[concat(parameters('SPOVmName'), 'PublicIP' )]",
        "vm2publicIpAddressName": "[concat(parameters('VerificationVmName'), 'PublicIP' )]",
        "vm1networkInterfaceName": "[concat(parameters('SPOVmName'),'NetInt')]",
        "vm2networkInterfaceName": "[concat(parameters('VerificationVmName'),'NetInt')]",
        "virtualNetworkName": "vNet",
        "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), parameters('subnetName'))]",
        "SPONSGName" : "NSG-SPO",
        "VerificationNSGName" : "NSG-Verification",
        "osDiskType": "Standard_LRS",
        "location" : "[resourceGroup().location]",
        "subnetAddressPrefix": "10.1.0.0/24",
        "addressPrefix": "10.1.0.0/16",
        "tempSAName" : "[concat('sa', uniqueString(resourceGroup().id))]",
        "storageAccountsName" : "[toLower(substring(variables('tempSAName'), 0, if(less(24, length(variables('tempSAName'))), 24, length(variables('tempSAName')))))]",
        "linuxConfiguration" : {
            "disablePasswordAuthentication": true,
            "ssh": {
                "publicKeys": [
                    {
                        "path": "/home/itm/.ssh/authorized_keys",
                        "keyData": "[parameters('sshPublicKey')]"
                    }
                ]
            }
        }
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2018-10-01",
            "name": "[variables('vm1networkInterfaceName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups/', variables('SPONSGName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
                "[resourceId('Microsoft.Network/publicIpAddresses/', variables('vm1publicIpAddressName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('vm1publicIPAddressName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('SPONSGName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2018-10-01",
            "name": "[variables('vm2networkInterfaceName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups/', variables('VerificationNSGName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
                "[resourceId('Microsoft.Network/publicIpAddresses/', variables('vm2publicIpAddressName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig2",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('vm2publicIPAddressName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('VerificationNSGName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-02-01",
            "name": "[variables('SPONSGName')]",
            "location": "[variables('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH",
                        "properties": {
                            "priority": 1000,
                            "protocol": "Tcp",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "22"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-02-01",
            "name": "[variables('VerificationNSGName')]",
            "location": "[variables('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH",
                        "properties": {
                            "priority": 1000,
                            "protocol": "Tcp",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "22"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-04-01",
            "name": "[variables('virtualNetworkName')]",
            "location": "[variables('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetAddressPrefix')]",
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[variables('storageAccountsName')]",
            "location": "eastus",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('storageAccountsName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountsName'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('storageAccountsName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountsName'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[toLower(concat(variables('storageAccountsName'), '/default/blobContainers'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountsName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountsName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-02-01",
            "name": "[variables('vm1publicIpAddressName')]",
            "location": "[variables('location')]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "publicIPAddressVersion": "IPv4",
                "idleTimeoutInMinutes": 4
            },
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-02-01",
            "name": "[variables('vm2publicIpAddressName')]",
            "location": "[variables('location')]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "publicIPAddressVersion": "IPv4",
                "idleTimeoutInMinutes": 4
            },
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-03-01",
            "name": "[parameters('SPOVmName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('vm1networkInterfaceName'))]",
                "[resourceId('Microsoft.Storage/StorageAccounts', variables('storageAccountsName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('VmSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "[variables('osDiskType')]"
                        }
                    },
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "[parameters('ubuntuOSVersion')]",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vm1networkInterfaceName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https://', variables('storageAccountsName'), '.blob.core.windows.net/')]"
                    }
                },
                "osProfile": {
                    "computerName": "[parameters('SPOVmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "linuxConfiguration": "[variables('linuxConfiguration')]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-03-01",
            "name": "[parameters('VerificationVmName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('vm2networkInterfaceName'))]",
                "[resourceId('Microsoft.Storage/StorageAccounts', variables('storageAccountsName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('VmSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "[variables('osDiskType')]"
                        }
                    },
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "[parameters('ubuntuOSVersion')]",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vm2networkInterfaceName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https://', variables('storageAccountsName'), '.blob.core.windows.net/')]"
                    }
                },
                "osProfile": {
                    "computerName": "[parameters('VerificationVmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "linuxConfiguration": "[variables('linuxConfiguration')]"
                }
            }
        },
        {
            "name": "[parameters('sqlServerName')]",
            "type": "Microsoft.DBforPostgreSQL/servers",
            "apiVersion": "2017-12-01-preview",
            "location": "[parameters('sqlLocation')]",
            "sku": {
                "name": "[parameters('sqlSkuName')]",
                "tier": "[parameters('sqlSkuTier')]",
                "capacity": "[parameters('sqlSkuCapacity')]",
                "size": "[parameters('sqlSkuSizeMB')]",
                "family": "[parameters('sqlSkuFamily')]"
            },
            "properties": {
                "createMode": "Default",
                "version": "[parameters('sqlVersion')]",
                "administratorLogin": "[parameters('sqlAdminUsername')]",
                "administratorLoginPassword": "[parameters('sqlAdminPassword')]",
                "storageProfile": {
                    "storageMB": "[parameters('sqlSkuSizeMB')]",
                    "backupRetentionDays": "[parameters('sqlBackupRetentionDays')]",
                    "geoRedundantBackup": "[parameters('sqlGeoRedundantBackup')]",
                    "storageAutoGrow": "[parameters('sqlStorageAutoGrow')]"
                },
                "infrastructureEncryption": "[parameters('sqlInfrastructureEncryption')]"
            }
            
            
        }
    ]
}